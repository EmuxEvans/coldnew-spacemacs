#+TITLE: coldnew's emacs config
#+AUTHOR: Yen-Chin, Lee <coldnew>
#+email: coldnew.tw at gmail.com
#+STARTUP: overview indent align
#+BABEL: :cache yes
#+OPTIONS: ^:nil

#+ATTRL_TML: alt="Build Status"
[[https://travis-ci.org/coldnew/coldnew-spacemacs][https://travis-ci.org/coldnew/coldnew-spacemacs.svg?branch=master]]

* About

This is my emacs config, which is a totally rewrite version based on
top of [[https://github.com/syl20bnr/spacemacs][spacemacs]] and [[https://github.com/coldnew/coldnew-emacs][coldnew-emacs]] with [[http://en.wikipedia.org/wiki/Literate_programming][literate programming]] in
[[http://orgmode.org/][org-mode]] ,but use English to write this config instead.

Feal free to use it :).

** Install or testing this config

- First use git to download whole repo

  : git clone https://github.com/coldnew/coldnew-spacemacs.git

- Then use git submodule to download the spacemacs

  : git submodule init
  : git submodule update

- Befor trying starting emacs, you need to bootstrap with [[https://github.com/cask/cask][Cask]]

  : cask install

- If you don not put this repo on =~/.emacs.d=, you need to use following
  command to start emacs

  : emacs -q -l ~/coldnew-spacemacs/init.el

** Packages need to install in system (Optional)

Some extra packages need to install in system manually. These packages
are =optional= but can make my spacemacs work more nicely.

- Mac OSX

  #+BEGIN_SRC sh
    brew install the_silver_searcher
    brew install fasd
    brew install mu --with-emacs --HEAD
  #+END_SRC


- Gentoo Linux

  #+BEGIN_SRC sh
    emerge sys-apps/the_silver_searcher
    emerge app-shells/fasd
    USE="emacs" emerge net-mail/mu
  #+END_SRC

* Package Management with Cask and Pallet

[[https://github.com/rdallasgray/pallet][Pallet]] is a wonderful little tool built on [[https://github.com/cask/cask][Cask]], a dependency management tool
for Emacs packages. Pallet adds automatic updating of the =Caskfile= when
packages are installed and deleted.

** Installing Cask

Just run this command in your terminal of choice:

#+NAME: Cask Installation
#+BEGIN_SRC sh :tangle no
  $ curl -fsSkL https://raw.github.com/cask/cask/master/go | python
#+END_SRC

then add =~/.cask/bin= to your =PATH= so that you can use =cask=.

** Creating a Caskfile

For now, we just need a minimal =Cask= to get Pallet set up. Mine looks
like this:

#+NAME: Cask
#+BEGIN_SRC emacs-lisp :tangle no
  (source gnu)
  (source melpa)

  (depends-on "pallet")
  (depends-on "req-package")
  (depends-on "f")
  (depends-on "evil")
#+END_SRC

Then run the following command in your =.emacs.d= directory to set up Pallet:

#+NAME: Cask Initialization
#+BEGIN_SRC sh :tangle no
  cask install
#+END_SRC

** Initialize Cask

Finally, we add the following lines to our init file:

#+BEGIN_SRC emacs-lisp
  (require 'cask "~/.cask/cask.el")
  (cask-initialize)
#+END_SRC

** Initialize Pallet

Since we already install pallet via cask, we just need to use
following code to initialize pallet.

#+BEGIN_SRC emacs-lisp
  (require 'pallet)
  (pallet-mode t)
#+END_SRC

I always make [[https://github.com/rdallasgray/pallet][Pallet]] re-generate the =Cask= file when emacs startup,
so use =pallet-init= command here.

#+BEGIN_SRC emacs-lisp
  (pallet-init)
#+END_SRC

* Load Path

The variable =load-path= lists all the directories where Emacs should
look for Elisp files.

Though I use =Cask= as package management in my emacs, some local
packages like my own theme or others can't fetch by elpa need to add
to load-path, this will help emacs find them and can use following
command to load them.

#+BEGIN_SRC emacs-lisp :tangle no
  (require 'xxx)
#+END_SRC

Following are my method to add directories to load-path ~recursively~,
this function also create directory to prevent directory not exist.

If you don't has any local elisp and all packages is mantain by cask
or elpa or spacemacs, you can skip following code.

#+BEGIN_SRC emacs-lisp
  ;; Add directories to emacs's `load-path' recursively.
  ;; if path does not exist, create directory.
  (let* ((lisp-dir '("local-lisp/" "theme/")))
    (dolist (lisp-path lisp-dir)
      (if (not (file-exists-p lisp-path)) (make-directory (concat emacs-dir lisp-path) t))
      (let* ((load-dir (concat emacs-dir lisp-path))
             (default-directory load-dir))
        (setq load-path
              (append
               (let ((load-path (copy-sequence load-path)))
                 (append
                  (copy-sequence (normal-top-level-add-to-load-path '(".")))
                  (normal-top-level-add-subdirs-to-load-path)))
               load-path)))))
#+END_SRC

* Spacemacs

#+BEGIN_SRC emacs-lisp
  ;; Make spacemacs not remove my orphan packages.
  (defadvice configuration-layer/delete-orphan-packages (around null-func activate)
    "Overwrite the spacemacs's `configuration-layer/delete-orphan-packages'
  to make it not remove any orphan packages.")

  ;; Make a fake entry point for spacemacs, also modify the
  ;; `user-emacs-directory' temporary to mislead spacemacs real emacs
  ;; directory.
  (let* ((spacemacs-dir
          (directory-file-name (concat emacs-dir "spacemacs")))
         (spacemacs-init
          (concat (file-name-as-directory spacemacs-dir) "init.el"))
         (user-emacs-directory (file-name-directory spacemacs-init)))

    ;; load my config instead of make spacemacs load ~/.spacemacs
    (load (concat emacs-dir "spacemacs.el"))

    ;; Initial spacemacs, our emacs run on top of it
    (load spacemacs-init))
#+END_SRC

* Languages or Encodings

Since current Emacs default run on UTF-8, it's no need to setup the
encoding.

For language, though Traditional Chinese is my mothertone, I still
prefer use =en_US= to display time info.

#+BEGIN_SRC emacs-lisp
  (setq system-time-locale "en_US" )
#+END_SRC
